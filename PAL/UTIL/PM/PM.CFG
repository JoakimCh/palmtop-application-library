; ------------------------------------------------------------------------
;   PalMake configuration file                                 gk, 2.6.95
; ------------------------------------------------------------------------
;
; To adapt PalMake to your system, only two changes are usually needed:
;
; 1) Under the [Env] section below, change PalDir to reflect the path
;    where the PAL directories are installed on your system.
;
; 2) Under the [.c] section, set the 'Tool =' line to the compiler
;    that you are using. Here's the list of currently supported
;    compilers, and the corresponding setting
;
;    Compiler brand            Setting required
;    --------------            ----------------
;    Borland C++                BC
;    Turbo C                    TC
;    Mix Power C                PC
;    Microsoft Quick C          QC
;    Microsoft C                MS
;    Symantec C++               SC
;    LSI C                      LC
;
; If your compiler is not listed above, see PM.DOC for details on how
; to create a section for it. Please let us know if you do this, so
; that we can include your section in the next PAL release.
;
; Note: if you develop on the palmtop as well, and use another PAL
;       directory there, and another Tool, you may set the LxTool
;       and LxPalDir variables (see below for an example).
;       PM will automatically use these, if running on the palmtop.
;       It will use the regular variables if running on the desktop
;       or if the Lx* versions are not present.
;

; -------------------------------------------------------------------------
;
; Environment section - specify here where you installed PAL
;
[Env]
PalDir   = c:\palmtop\pal
LxPalDir = a:\pal

;
; Definitions to use for sources with the .c extension
;
[.c]
Tool   = BC
LxTool = QC

; QC and MSC compiler users: the model specification for these compilers
; is in the respective sections, [QC] and [MSC].
Model  = s

; -------------------------------------------------------------------------

;
; Borland C section
;
[BC]
TargetExt  = .obj
LibCompile = bcc -c -v -m$(.c/Model) -I.\inc -o$(/tgt) $(/src) >$(/err)
AppCompile = bcc -c -v -m$(.c/Model) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = tlib ..\libs\BC$(.c/Model)PAL -+$(/tgt)
Link       = bcc -v -m$(.c/Model) $(/tgl) $(Env/LxPalDir)\libs\BC$(.c/Model)PAL.LIB
CleanUp    = command /c for %i in ($(/tgt),$(/err)) do del %i

;
; Mix Power C section
;
[PC]
TargetExt  = .mix
LibCompile = pc -c -m$(.c/Model) -i.\inc -o$(/tgt) $(/src) >$(/err)
AppCompile = pc -c -m$(.c/Model) -i$(Env/LxPalDir)\src\inc -o$(/tgt) $(/src) >$(/err)
Archive    = merge ..\libs\PC$(.c/Model)PAL $(/tgt)
Link       = pcl $(/tgl);$(Env/LxPalDir)\libs\PC$(.c/Model)PAL
CleanUp    = command /c for %i in ($(/tgt),$(/err)) do del %i

;
; Turbo C section
;
[TC]
TargetExt  = .obj
LibCompile = tcc -c -v -m$(.c/Model) -I.\inc -o$(/tgt) $(/src) >$(/err)
AppCompile = tcc -c -v -m$(.c/Model) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = tlib ..\libs\TC$(.c/Model)PAL -+$(/tgt)
Link       = tcc -m$(.c/Model) $(/tgl) $(Env/LxPalDir)\libs\TC$(.c/Model)PAL.lib
CleanUp    = command /c for %i in ($(/tgt),$(/err)) do del %i

;
; Microsoft Quick C section
;
; Note that the common $(.c/Model) setting is not used because it needs to
; be uppercase for the Microsoft compilers. Instead, a local $(QC/Model)
; variable is used.
;
[QC]
Model      = S
TargetExt  = .obj
LibCompile = qcl /c /A$(QC/Model) -I.\inc /Fo$(/tgt) $(/src) >$(/err)
AppCompile = qcl /c /A$(QC/Model) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = lib ..\libs\QC$(QC/Model)PAL -+$(/tgt),,
Link       = qcl /F 1000 /A$(QC/Model) $(/tgl) $(Env/LxPalDir)\libs\QC$(QC/Model)PAL.lib
CleanUp    = command /c for %i in ($(/tgt),$(/err)) do del %i

; Microsoft C ver 6.0 and above
;
; Note that the common $(.c/Model) setting is not used because it needs to
; be uppercase for the Microsoft compilers. Instead, a local $(MS/Model)
; variable is used.
;
[MS]
Model      = S
TargetExt  = .obj
LibCompile = cl /nologo /c /A$(MS/Model) -I.\inc /Fo$(/tgt) $(/src) >$(/err)
AppCompile = cl /nologo /c /A$(MS/Model) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = lib ..\libs\MS$(MS/Model)PAL -+$(/tgt),,
Link       = link /STACK:0x1000 /A$(MS/Model) $(/tgl),,,$(Env/LxPalDir)\libs\MS$(MS/Model)PAL.lib;
CleanUp    = command /c for %i in ($(/tgt),$(/err)) do del %i

;
; Symantec C++ Professional ver 6.11
; (contributed by Ron Crain)
;
[SC]
Model      = S
TargetExt  = .obj
LibCompile = sc -c -0 -Jm -o+space -w -m$(.c/Model) -I.\inc -o$(/tgt) $(/src) >$(/err)
AppCompile = sc -c -0 -Jm -o -w -m$(.c/Model) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = lib ..\libs\SC$(SC/Model)PAL -+$(/tgt),,
Link       = link $(/tgl),,, $(Env/LxPalDir)\libs\SC$(SC/Model)PAL.lib /nologo;
CleanUp    = command /c for %i in ($(/tgt),$(/err),*.bak,*.map) do del %i

;
; LSI C ver 3.3c and above.
; (contributed by Naohiko Shimizu <nshimizu@et.u-tokai.ac.jp>)
;
[LC]
TargetExt  = .obj
LibCompile = lcc -c -h -w1 -I.\inc -o$(/tgt) $(/src) >$(/err)
AppCompile = lcc -c -h -w -o$(/tgt) -I$(Env/LxPalDir)\src\inc $(/src) >$(/err)
Archive    = oar r ..\libs\LC$(.c/Model)PAL $(/tgt)
Link       = lcc $(/tgl) -L$(Env/LxPalDir)\libs -lLC$(.c/Model)PAL.lib
CleanUp    = command /c for %i in ($(/tgt),$(/err),*.bak,*.map) do del %i

